{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nexport class AuthGaurdService {\n  constructor(loged) {\n    this.loged = loged;\n  }\n  canActivate() {\n    if (this.loged.isloggin()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\nAuthGaurdService.ɵfac = function AuthGaurdService_Factory(t) {\n  return new (t || AuthGaurdService)(i0.ɵɵinject(i1.ApiService));\n};\nAuthGaurdService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGaurdService,\n  factory: AuthGaurdService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,KAAiB;IAAjB,UAAK,GAALA,KAAK;EAAgB;EAEzCC,WAAW;IAET,IAAI,IAAI,CAACD,KAAK,CAACE,QAAQ,EAAE,EAAE;MACzB,OAAO,IAAI;KACZ,MAAM;MACL,OAAO,KAAK;;EAEhB;;AAXWJ,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAK,SAAhBL,gBAAgB;EAAAM,YAFf;AAAM","names":["AuthGaurdService","constructor","loged","canActivate","isloggin","factory","providedIn"],"sourceRoot":"","sources":["/home/aspire121/Practice/Angular/Task-3/src/app/shared/auth-gaurd.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGaurdService implements CanActivate {\n\n  constructor(private loged: ApiService) { }\n\n  canActivate() {\n\n    if (this.loged.isloggin()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}