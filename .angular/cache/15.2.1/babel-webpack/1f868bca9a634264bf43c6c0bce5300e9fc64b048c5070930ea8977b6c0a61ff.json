{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../shared/api.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/forms\";\nexport class LoginComponent {\n  // message!: string;\n  constructor(router, services, http) {\n    this.router = router;\n    this.services = services;\n    this.http = http;\n    // loginForm!: FormGroup;\n    // loginObj: any = {\n    //   username: '',\n    //   password: ''\n    // }\n    this.loginForm = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    sessionStorage.clear();\n  }\n  onLogin() {\n    //1st Method\n    // if(this.loginObj.username == 'admin' && this.loginObj.password == 'admin@123'){\n    //   this.login=true;\n    //   this.services.log(this.login);\n    //   this.router.navigateByUrl('admin');\n    // }\n    // else if (this.loginObj.username == 'vendor1' && this.loginObj.password == 'vendor@1') {\n    //   this.login=true;\n    //   this.services.log(this.login);\n    //   this.router.navigateByUrl('vendor')\n    // } else {\n    // }\n    //2nd Method\n    // this.http.get(\"http://localhost:3000/adminvendor\").subscribe(res => {\n    //   this.vendor = res;\n    //   console.log(this.vendor);\n    //   this.vendor.forEach((element: any) => {\n    //     if (element.username == this.loginForm.value.username) {\n    //       this.login = true;\n    //       this.services.log(this.login);\n    //       this.router.navigate(['/admin']);\n    //     }\n    //     else if (element.username == this.loginForm.value.username) {\n    //       this.login = true;\n    //       this.services.log(this.login);\n    //       this.router.navigateByUrl('vendor');\n    //     }\n    //   });\n    //   const userdata = (sessionStorage.setItem(\"userdata\", JSON.stringify(this.vendor)));\n    //   console.log(userdata);\n    // })\n    // \"http://localhost:3000/adminvendor/?username=\" + \n    //3rd Method\n    if (this.loginForm.valid) {\n      console.log(\"form submited\");\n      this.http.get(\"http://localhost:3000/adminvendor/?username=\" + this.loginForm.value.username).subscribe(data => {\n        this.vendor = data;\n        console.log(this.vendor);\n        console.log(\"1\");\n        if (this.vendor[0].username === this.loginForm.value.username) {\n          console.log(\"2\");\n          sessionStorage.setItem('user', JSON.stringify(this.vendor));\n          sessionStorage.setItem('username', this.vendor[0].username);\n          if (this.vendor[0].role === 'admin') {\n            this.login = true;\n            this.services.login(this.login);\n            this.router.navigateByUrl('/admin/:id');\n            console.log(\"Admin\");\n          }\n          if (this.vendor[0].role === 'vendor') {\n            this.login = true;\n            this.services.login(this.login);\n            this.router.navigateByUrl('vendor/:id');\n            console.log(\"Vendor\");\n          }\n        } else {\n          console.log(\"Error!!\");\n        }\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.HttpClient));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-3\", \"h-100\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"exampleInputEmail1\", 1, \"form-label\"], [\"type\", \"email\", \"name\", \"username\", \"formControlName\", \"username\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\"], [\"id\", \"emailHelp\", 1, \"form-text\"], [\"for\", \"exampleInputPassword1\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"exampleInputPassword1\", \"name\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mb-3\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementStart(5, \"div\", 4);\n      i0.ɵɵtext(6, \"We'll never share your email with anyone else.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 7);\n      i0.ɵɵtext(12, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","Validators","LoginComponent","constructor","router","services","http","username","required","password","ngOnInit","sessionStorage","clear","onLogin","loginForm","valid","console","log","get","value","subscribe","data","vendor","setItem","JSON","stringify","role","login","navigateByUrl","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/aspire121/Practice/Angular/Task-3/src/app/login/login.component.ts","/home/aspire121/Practice/Angular/Task-3/src/app/login/login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, Directive, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../shared/api.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n\n  login!: boolean;\n\n  vendor: any;\n\n  // loginForm!: FormGroup;\n\n  // loginObj: any = {\n  //   username: '',\n  //   password: ''\n  // }\n\n  loginForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required])\n  });\n\n  // message!: string;\n\n  constructor(private router: Router, private services: ApiService, private http: HttpClient) { }\n\n  ngOnInit(): void {\n    sessionStorage.clear();\n  }\n\n  onLogin() {\n\n    //1st Method\n    // if(this.loginObj.username == 'admin' && this.loginObj.password == 'admin@123'){\n\n    //   this.login=true;\n    //   this.services.log(this.login);\n    //   this.router.navigateByUrl('admin');\n\n    // }\n    // else if (this.loginObj.username == 'vendor1' && this.loginObj.password == 'vendor@1') {\n\n    //   this.login=true;\n    //   this.services.log(this.login);\n\n    //   this.router.navigateByUrl('vendor')\n\n    // } else {\n    // }\n\n\n    //2nd Method\n    // this.http.get(\"http://localhost:3000/adminvendor\").subscribe(res => {\n    //   this.vendor = res;\n\n    //   console.log(this.vendor);\n\n    //   this.vendor.forEach((element: any) => {\n\n    //     if (element.username == this.loginForm.value.username) {\n\n    //       this.login = true;\n    //       this.services.log(this.login);\n    //       this.router.navigate(['/admin']);\n\n    //     }\n\n    //     else if (element.username == this.loginForm.value.username) {\n\n    //       this.login = true;\n    //       this.services.log(this.login);\n    //       this.router.navigateByUrl('vendor');\n\n    //     }\n\n    //   });\n    //   const userdata = (sessionStorage.setItem(\"userdata\", JSON.stringify(this.vendor)));\n    //   console.log(userdata);\n    // })\n    // \"http://localhost:3000/adminvendor/?username=\" + \n\n\n    //3rd Method\n    if (this.loginForm.valid) {\n      console.log(\"form submited\");\n      this.http.get(\"http://localhost:3000/adminvendor/?username=\" + this.loginForm.value.username).subscribe(data => {\n\n        this.vendor = data;\n        console.log(this.vendor);\n\n        console.log(\"1\");\n\n        if (this.vendor[0].username === this.loginForm.value.username) {\n\n          console.log(\"2\");\n          sessionStorage.setItem('user', JSON.stringify(this.vendor));\n          sessionStorage.setItem('username', this.vendor[0].username);\n\n          if (this.vendor[0].role === 'admin') {\n\n            this.login = true;\n            this.services.login(this.login);\n            this.router.navigateByUrl('/admin/:id');\n            console.log(\"Admin\");\n\n\n          }\n          if (this.vendor[0].role === 'vendor') {\n\n            this.login = true;\n            this.services.login(this.login);\n            this.router.navigateByUrl('vendor/:id');\n            console.log(\"Vendor\");\n\n          }\n        }\n        else {\n          console.log(\"Error!!\");\n        }\n      });\n    }\n  }\n  // get username() {\n  //   return this.loginForm.get('username');\n  // }\n  // get password() {\n  //   return this.loginForm.get('password');\n  // }\n\n}","<form class=\"container mt-3 h-100\" [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\">\n  <div class=\"mb-3\">\n    <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n    <!-- <input type=\"email\" class=\"form-control\" name=\"username\"  [(ngModel)] = \"loginObj.username\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"> -->\n    <input type=\"email\" class=\"form-control\" name=\"username\" formControlName=\"username\" id=\"exampleInputEmail1\"\n      aria-describedby=\"emailHelp\">\n    <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\n  </div>\n  <div class=\"mb-3\">\n    <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n    <!-- <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" name=\"password\" [(ngModel)] = \"loginObj.password\"> -->\n    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" name=\"password\" formControlName=\"password\">\n  </div>\n  <!-- <button type=\"submit\" class=\"btn btn-success mb-3\" (click)=\"onLogin()\">Submit</button> -->\n  <button type=\"submit\" class=\"btn btn-success mb-3\">Submit</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}